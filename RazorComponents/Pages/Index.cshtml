@page
@model BlazorInRazorPages.Pages.IndexModel
@using BlazorInRazorPages.Components

@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

@* add Blazor components, their Parameters are passed as model fields *@

@*
    Even the basic Counter component does not seem to work. It looks like Blazor does not work at all, because there are no Messages
    in the network tab of the browser - while the assets are there and server pre-rendering works, it seems like interactions do not.
    This used to work around .NET Core 3.0 Preview 4, even though back then the syntax for rendering a Blazor component was
    different (through an HTML helper and anonymous object for parameters), but it seems Blazor no longer works in Razor Pages.
*@

@*<component type="typeof(Counter)" render-mode="ServerPrerendered" />*@

@*If the basic Blazor components start working, the Telerik ones should too*@

@*<component type="typeof(MyWindow)" render-mode="ServerPrerendered" />*@

@*(await Html.RenderComponentAsync<MyDropDown>(RenderMode.Server, new { Customers = Model.BlazorGridData }))*@

@*<component type="typeof(MyDropDown)" render-mode="ServerPrerendered" param-Customers="@Model.BlazorGridData.Take(15)" />*@

@*<component type="typeof(MyGrid)" render-mode="ServerPrerendered" param-Customers="@Model.BlazorGridData" />

    For the sake of the demo, we will add a second grid with similar data here*@

<component type="typeof(MyList)" render-mode="ServerPrerendered" param-Customers="@Model.BlazorGridData.Take(15)" />

